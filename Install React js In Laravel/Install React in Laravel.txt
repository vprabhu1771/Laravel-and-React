To install React.js in a Laravel application, follow these steps:

Step 1: Set Up Laravel Project
If you haven't created a Laravel project yet, you can create one using the following command:

composer create-project --prefer-dist laravel/laravel my-laravel-app

Navigate to your Laravel project directory:

cd my-laravel-app


Step 2: Install Laravel Mix
Laravel Mix is included by default with Laravel, but you need to install the necessary dependencies for it to work with React. Run the following command to install these dependencies:

npm install


Step 3: Install React and ReactDOM
Next, install React and ReactDOM using npm:

npm install react react-dom


Step 4: Configure Laravel Mix
Open the `webpack.mix.js` file in the root of your Laravel project and add the following configuration to compile React components:

const mix = require('laravel-mix');

mix.js('resources/js/app.js', 'public/js')
    .react()
    .sass('resources/sass/app.scss', 'public/css');


Step 5: Create React Component
Create a `components` directory inside the `resources/js` directory and add a React component file, e.g., `ExampleComponent.js`:

// resources/js/components/ExampleComponent.js

import React from 'react';
import ReactDOM from 'react-dom';

function ExampleComponent() {
    return (
        <div className="container">
            <h1>Hello, React!</h1>
        </div>
    );
}

export default ExampleComponent;

if (document.getElementById('example')) {
    ReactDOM.render(<ExampleComponent />, document.getElementById('example'));
}


Step 6: Edit the Main JavaScript File
Open the `resources/js/app.js` file and import the React component:

// resources/js/app.js

require('./bootstrap');
require('./components/ExampleComponent');


Step 7: Compile Assets
Run the following command to compile your assets:

npm run dev

For production, use:

npm run prod


Step 8: Use React Component in Blade Template
Finally, include the compiled JavaScript file in your Blade template and add a div element with an id of `example` where you want to render the React component:

<!-- resources/views/welcome.blade.php -->

<!DOCTYPE html>
<html>
<head>
    <title>Laravel React</title>
    <link rel="stylesheet" href="{{ mix('css/app.css') }}">
</head>
<body>
    <div id="example"></div>
    <script src="{{ mix('js/app.js') }}"></script>
</body>
</html>


Now, when you visit your Laravel application's home page, you should see the React component rendered.

This setup provides a basic integration of React with Laravel. You can now build more complex React components and use them throughout your Laravel application.